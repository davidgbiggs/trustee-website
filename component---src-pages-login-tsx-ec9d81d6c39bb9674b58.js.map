{"version":3,"sources":["webpack:///./src/layouts/style-layout.tsx","webpack:///./src/pages/login.tsx","webpack:///./src/components/Button.tsx"],"names":["StyleLayout","children","LoginForm","BoxForm","LoginSeparator","TextInSeparator","LoginPage","useState","isLoading","setIsLoading","errorText","setErrorText","email","setEmail","password","setPassword","onSubmit","event","preventDefault","firebase","auth","signInWithEmailAndPassword","then","navigate","catch","error","code","finally","className","htmlFor","placeholder","disabled","type","onChange","target","value","id","aria-describedby","block","onClick","Button","blockValue","role"],"mappings":"uHAAA,oCAWeA,IAJsB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACtC,OAAO,uBAAMA,K,2LCKf,IAAMC,EAAY,YAAOC,IAAP,sBAAH,2CAITC,EAAiB,mBAAH,oBAAG,CAAH,+GAOdC,EAAkB,oBAAH,oBAAG,CAAH,4GAoGNC,UAvFf,WAAqB,MACeC,oBAAS,GAApCC,EADY,KACDC,EADC,OAEeF,mBAAS,QAApCG,EAFY,KAEDC,EAFC,OAGOJ,mBAAS,IAA5BK,EAHY,KAGLC,EAHK,OAIaN,mBAAS,IAAlCO,EAJY,KAIFC,EAJE,KAuCnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAACb,EAAD,CAAWc,SA9BrB,SAA0BC,GACxBA,EAAMC,iBACNT,GAAa,GACbU,IACGC,OACAC,2BAA2BT,EAAOE,GAClCQ,MAAK,WACJC,YAAS,gBAEVC,OAAM,SAASC,GAEd,OAAQA,EAAMC,MACZ,IAAK,sBACHf,EAAa,kFACb,MACF,IAAK,sBACHA,EAAa,qEACb,MACF,QACEA,EAAa,8CAGlBgB,SAAQ,kBAAMlB,GAAa,OAQiBC,UAAWA,GAChD,mBAAKkB,UAAU,cACb,qBAAOC,QAAQ,eAAf,SACA,qBACEC,YAAY,aACZC,SAAUvB,EACVwB,KAAK,QACLC,SA7ChB,SAA2BhB,GACzBJ,EAASI,EAAMiB,OAAOC,QA6CRP,UAAU,eACVQ,GAAG,cACHC,mBAAiB,YACjBF,MAAOvB,KAGX,mBAAKgB,UAAU,cACb,qBAAOC,QAAQ,kBAAf,YACA,qBACEC,YAAY,WACZK,MAAOrB,EACPiB,SAAUvB,EACVwB,KAAK,WACLC,SAvDhB,SAA8BhB,GAC5BF,EAAYE,EAAMiB,OAAOC,QAuDXP,UAAU,eACVQ,GAAG,oBAGP,YAAC,IAAD,CAAQJ,KAAK,SAASxB,UAAWA,EAAW8B,OAAK,GAAjD,UAGA,YAAClC,EAAD,KACE,YAACC,EAAD,YAEF,sBAAQkC,QAAS,kBAAMhB,YAAS,cAAcS,KAAK,SAASJ,UAAU,2BAAtE,kB,kCCjHd,qCA6BeY,IApBuB,SAAC,GAAkD,IAAhDD,EAAgD,EAAhDA,QAAStC,EAAuC,EAAvCA,SAAUO,EAA6B,EAA7BA,UAAWwB,EAAkB,EAAlBA,KAC/DS,EADiF,EAAZH,MACxC,YAAc,GAEjD,OAEE,WADA,CACA,UAAQP,SAAUvB,EAAW+B,QAASA,EAASP,KAAMA,EAAMJ,UAAS,mBAAqBa,GACtFjC,EACC,8BACE,mBAAKoB,UAAU,8CAA8Cc,KAAK,UAChE,oBAAMd,UAAU,WAAhB,eAEF,wCALM,GAQL3B","file":"component---src-pages-login-tsx-ec9d81d6c39bb9674b58.js","sourcesContent":["import React from 'react'\nimport './style-layout.scss'\n\ntype Props = {\n  children?: React.ReactNode\n}\n\nconst StyleLayout: React.FC<Props> = ({ children }) => {\n  return <div>{children}</div>\n}\n\nexport default StyleLayout\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { ChangeEvent, FormEvent, useState } from 'react'\n\nimport firebase from 'firebase'\nimport { navigate } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport BoxForm from '../components/BoxForm'\nimport Button from '../components/Button'\nimport IndexLayout from '../layouts/index'\nimport StyleLayout from '../layouts/style-layout'\n\nconst LoginForm = styled(BoxForm)`\n  margin-top: 50px;\n`\n\nconst LoginSeparator = styled.div`\n  border-top: 1px solid #cbd2d6;\n  position: relative;\n  margin: 25px 0 10px;\n  text-align: center;\n`\n\nconst TextInSeparator = styled.span`\n  background-color: #fff;\n  padding: 0 0.5em;\n  position: relative;\n  color: #6c7378;\n  top: -0.8em;\n`\n\n// const LinkContainer = styled.div`\n//   margin-top: 15px;\n//   text-align: center;\n// `\n\nfunction LoginPage() {\n  const [isLoading, setIsLoading] = useState(false)\n  const [errorText, setErrorText] = useState('none')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  function handleEmailChange(event: ChangeEvent<HTMLInputElement>) {\n    setEmail(event.target.value)\n  }\n\n  function handlePasswordChange(event: ChangeEvent<HTMLInputElement>) {\n    setPassword(event.target.value)\n  }\n\n  function handleFormSubmit(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    setIsLoading(true)\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        navigate('/account/')\n      })\n      .catch(function(error) {\n        // Handle Errors here.\n        switch (error.code) {\n          case 'auth/user-not-found':\n            setErrorText(`We couldn't find any records for that user. Did you type your email correctly?`)\n            break\n          case 'auth/wrong-password':\n            setErrorText('There was an error signing in. Please double check your password.')\n            break\n          default:\n            setErrorText('There was an unknown error signing in.')\n        }\n      })\n      .finally(() => setIsLoading(false))\n  }\n\n  return (\n    <IndexLayout>\n      <StyleLayout>\n        <Page>\n          <Container>\n            <LoginForm onSubmit={handleFormSubmit} errorText={errorText}>\n              <div className=\"form-group\">\n                <label htmlFor=\"login-email\">Email</label>\n                <input\n                  placeholder=\"Your Email\"\n                  disabled={isLoading}\n                  type=\"email\"\n                  onChange={handleEmailChange}\n                  className=\"form-control\"\n                  id=\"login-email\"\n                  aria-describedby=\"emailHelp\"\n                  value={email}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"login-password\">Password</label>\n                <input\n                  placeholder=\"Password\"\n                  value={password}\n                  disabled={isLoading}\n                  type=\"password\"\n                  onChange={handlePasswordChange}\n                  className=\"form-control\"\n                  id=\"login-password\"\n                />\n              </div>\n              <Button type=\"submit\" isLoading={isLoading} block>\n                Submit\n              </Button>\n              <LoginSeparator>\n                <TextInSeparator>or</TextInSeparator>\n              </LoginSeparator>\n              <button onClick={() => navigate('/sign-up/')} type=\"submit\" className=\"btn btn-light btn-block\">\n                Sign Up\n              </button>\n            </LoginForm>\n          </Container>\n        </Page>\n      </StyleLayout>\n    </IndexLayout>\n  )\n}\n\nexport default LoginPage\n","import React from 'react'\n\ninterface ButtonProps {\n  onClick?: () => void\n  isLoading: boolean\n  type: 'button' | 'reset' | 'submit'\n  block?: boolean\n}\n\nconst Button: React.FC<ButtonProps> = ({ onClick, children, isLoading, type, block }) => {\n  const blockValue: string = block ? 'btn-block' : ''\n\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <button disabled={isLoading} onClick={onClick} type={type} className={`btn btn-primary ${blockValue}`}>\n      {isLoading ? (\n        <>\n          <div className=\"spinner-border spinner-border-sm text-light\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n          <span>&nbsp;Loading...</span>\n        </>\n      ) : (\n        `${children}`\n      )}\n    </button>\n  )\n}\n\nexport default Button\n"],"sourceRoot":""}