{"version":3,"sources":["webpack:///./src/layouts/style-layout.tsx","webpack:///./src/components/BoxForm.tsx","webpack:///./src/pages/forgot-password.tsx"],"names":["StyleLayout","children","BoxForm","onSubmit","errorText","className","event","preventDefault","role","ForgotPasswordPage","useState","setEmail","isLoading","setIsLoading","handleEmailChange","target","value","WhiteSpaceDiv","HeadingContainer","ResetHeading","buttonText","beforeButtonChildren","htmlFor","disabled","type","onChange","id","aria-describedby"],"mappings":"sHAAA,oCAWeA,IAJsB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACtC,OAAO,uBAAMA,K,oCCRf,0BAwBeC,IAhBkB,SAAC,GAAiD,IAA/CD,EAA+C,EAA/CA,SAAUE,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAMjE,OACE,oBAAMA,UAAS,QAAUA,EAAaF,SANxC,SAAsBG,GACpBA,EAAMC,iBACNJ,EAASG,KAKP,mBAAKD,UAAyB,SAAdD,EAAuB,4BAA8B,qBAAsBI,KAAK,SAAhG,GACMJ,GAELH,K,sJCqFQQ,UA5Ff,WAA8B,MACFC,mBAAS,IAArBC,GADc,aAEMD,oBAAS,GAApCE,EAFqB,KAEVC,EAFU,OAGMH,mBAAS,QAApCN,EAHqB,KAK5B,SAASU,EAAkBR,GACzBK,EAASL,EAAMS,OAAOC,OANI,KAmC5B,IAAMC,EAAgB,mBAAH,oBAAG,CAAH,gDAIbC,EAAmB,mBAAH,oBAAG,CAAH,6CAIhBC,EAAe,iBAAH,oBAAG,CAAH,2DA0BlB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KAIE,YAACF,EAAD,UACA,YAAC,IAAD,CACEG,WAAW,iBACXjB,SAvEZ,SAA0BG,GACxBA,EAAMC,iBACNM,GAAa,IAsEHT,UAAWA,EACXiB,qBAlC2B,WACrC,OACE,8BACE,YAACH,EAAD,KACE,YAACC,EAAD,yCAEF,mBAAKd,UAAU,cACb,qBAAOiB,QAAQ,sBAAf,SACA,qBACEC,SAAUX,EACVY,KAAK,QACLC,SAAUX,EACVT,UAAU,eACVqB,GAAG,qBACHC,mBAAiB,iBAqBff,UAAWA","file":"component---src-pages-forgot-password-tsx-b5a0ff124069270c47da.js","sourcesContent":["import React from 'react'\nimport './style-layout.scss'\n\ntype Props = {\n  children?: React.ReactNode\n}\n\nconst StyleLayout: React.FC<Props> = ({ children }) => {\n  return <div>{children}</div>\n}\n\nexport default StyleLayout\n","import React, { FormEvent } from 'react'\n\ninterface Props {\n  onSubmit(event: FormEvent<HTMLFormElement>): void\n  errorText: string\n  className?: string\n}\n\nconst BoxForm: React.FC<Props> = ({ children, onSubmit, errorText, className }) => {\n  function handleSubmit(event: FormEvent<HTMLFormElement>): void {\n    event.preventDefault()\n    onSubmit(event)\n  }\n\n  return (\n    <form className={`form ${className}`} onSubmit={handleSubmit}>\n      <div className={errorText === 'none' ? 'alert alert-danger d-none' : 'alert alert-danger'} role=\"alert\">\n        {`${errorText}`}\n      </div>\n      {children}\n    </form>\n  )\n}\n\nexport default BoxForm\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { ChangeEvent, FormEvent, useState } from 'react'\n\n// import firebase from 'firebase'\nimport { navigate, Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport BoxForm from '../components/BoxForm'\nimport IndexLayout from '../layouts/index'\nimport StyleLayout from '../layouts/style-layout'\n\nfunction ForgotPasswordPage() {\n  const [email, setEmail] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [errorText, setErrorText] = useState('none')\n\n  function handleEmailChange(event: ChangeEvent<HTMLInputElement>) {\n    setEmail(event.target.value)\n  }\n\n  function handleFormSubmit(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    setIsLoading(true)\n    // firebase\n    //   .auth()\n    //   .sendPasswordResetEmail(email)\n    //   .then(() => {\n    //     console.log('signed in')\n    //     navigate('/account/')\n    //   })\n    //   .catch(function(error) {\n    //     // Handle Errors here.\n    //     switch (error.code) {\n    //       case 'auth/user-not-found':\n    //         setErrorText(`We couldn't find any records for that user. Did you type your email correctly?`)\n    //         break\n    //       case 'auth/wrong-password':\n    //         setErrorText('There was an error signing in. Please double check your password.')\n    //         break\n    //       default:\n    //         setErrorText('There was an unknown error signing in.')\n    //     }\n    //   })\n    //   .finally(() => setIsLoading(false))\n  }\n\n  const WhiteSpaceDiv = styled.div`\n    padding-bottom: 50px;\n  `\n\n  const HeadingContainer = styled.div`\n    text-align: center;\n  `\n\n  const ResetHeading = styled.p`\n    font-size: 25px;\n    font-weight: bold;\n  `\n\n  const BeforeButtonChildren: React.FC = () => {\n    return (\n      <>\n        <HeadingContainer>\n          <ResetHeading>Please enter your email address</ResetHeading>\n        </HeadingContainer>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">Email</label>\n          <input\n            disabled={isLoading}\n            type=\"email\"\n            onChange={handleEmailChange}\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n          />\n        </div>\n      </>\n    )\n  }\n\n  return (\n    <IndexLayout>\n      <StyleLayout>\n        <Page>\n          <Container>\n            {/* <input value={email} onChange={handleEmailChange} />\n          <input value={password} onChange={handlePasswordChange} />\n          <button type=\"button\">hi</button> */}\n            <WhiteSpaceDiv>&nbsp;</WhiteSpaceDiv>\n            <BoxForm\n              buttonText=\"Reset Password\"\n              onSubmit={handleFormSubmit}\n              errorText={errorText}\n              beforeButtonChildren={BeforeButtonChildren}\n              isLoading={isLoading}\n            />\n          </Container>\n        </Page>\n      </StyleLayout>\n    </IndexLayout>\n  )\n}\n\nexport default ForgotPasswordPage\n"],"sourceRoot":""}